df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,file='D:/Capstone/R/m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(xlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,file='m_pred.xlsx',sheetName='Sheet1')
#------------------------------------------library------------------------------------------#
library(xlsx)
library(lubridate)
#------------------------------------------library------------------------------------------#
library(xlsx)
install.packages('rJava')
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(xlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,file='m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(xlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,file='m_pred.xlsx',sheetName='Sheet1')
install('openxlsx')
rm(list=ls())
install.packages('openxlsx')
#------------------------------------------library------------------------------------------#
library(xlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,file='m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
install.packages('openxlsx')
#------------------------------------------library------------------------------------------#
library(openxlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,file='m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
install.packages('openxlsx')
#------------------------------------------library------------------------------------------#
library(openxlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,'m_pred.xlsx',sheetName='Sheet1')
install.packages("openxlsx")
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(openxlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,'m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(openxlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,'/EXCEL/m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(openxlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,'/EXCEL/m_pred.xlsx',sheetName='Sheet1')
rm(list=ls())
#------------------------------------------library------------------------------------------#
library(openxlsx)
library(lubridate)
library(httr)
library(rvest)
library(xts)
library(data.table)
library(dplyr)
library(prophet)
library(rJava)
#------------------------------------------function------------------------------------------#
t2n <- function(x) { as.numeric( as.POSIXct(strptime(x, "%Y-%m-%d %H:%M:%OS")) )  }
n2t <- function(x) { format(as.POSIXct(x, origin = "1970-01-01 09:00:00", tz="UTC"), "%Y-%m-%d %H:%M:%OS") }
#------------------------------------------data------------------------------------------#
key = "005930"
url = paste0("https://fchart.stock.naver.com/sise.nhn?symbol=", key, "&timeframe=day&count=1000&requestType=0")
data = GET(url) %>% read_html %>% html_nodes("item") %>% html_attr("data") %>% strsplit("\\|")
#------------------------------------------data-preprocessing------------------------------------------#
df = data.table( ds = sapply(data, function(x) { x[1] } ), y = sapply(data, function(x) { x[4] } ) )
df$y = df$y %>% as.double()
df$ds = paste(paste0(substr(df$ds, 1, 4), "-", substr(df$ds, 5, 6), "-", substr(df$ds, 7, 8)), "00:00:00")
df$ds_value = t2n(df$ds)
df = data.table( df %>% filter(y != 0) %>% filter( ds >= "2019-05-27" ) ); nrow(df)
n_pred = 90
df = rbind(df, data.table( ds = n2t( (seq( t2n(tail(df, 1)$ds) + 60*60*24*1, t2n(tail(df, 1)$ds) + 60*60*24*(n_pred), by = 60*60*24)) ), y= NA, ds_value = NA ))
df$ds_value = t2n(df$ds)
#------------------------------------------modeling------------------------------------------#
m = prophet( na.omit(df) , yearly.seasonality=T, weekly.seasonality = TRUE, daily.seasonality = TRUE )
m_pred = predict(m, df )
df$yhat = m_pred$yhat
df$yhat_lower = m_pred$yhat_lower
df$yhat_upper = m_pred$yhat_upper
#------------------------------------------visualization------------------------------------------#
dev.new(width = 15, height = 7.5)
yprt = pretty(df$y); ylim = range(yprt)
xlim = range(df$ds_value)
colors = colorRampPalette(c("cyan", "hotpink"))(ylim[2])
plot(df$ds_value, df$y, axe=F, xlim = xlim, ylim = ylim, xlab="", ylab="", col = colors[round(df$y)], type="o", pch=19)
axis(1, df$ds_value, df$ds, las=2, cex.axis=0.5); axis(2, yprt, yprt )
abline(h = yprt, col = adjustcolor("gray", 0.9), lty = 4)
rect(head(df %>% filter(is.na(y)), 1)$ds_value, ylim[1], tail(df %>% filter(is.na(y)), 1)$ds_value, ylim[2], col = adjustcolor("green", 0.5), border=NA)
lines(df$ds_value, df$yhat, lty = 4, lwd = 1)
lines(df$ds_value, df$yhat_lower, col = "gold", lty = 1, lwd = 2)
lines(df$ds_value, df$yhat_upper, col = "coral", lty = 1, lwd = 2)
legend("topleft", c("예측 영역", "yhat", "yhat_lower", "yhat_upper"), pch = c(15, NA, NA, NA), lty = c(NA, 4, 1, 1), col = c("green", "black", "gold", "coral"), bty="n" )
save(df, m, m_pred, file = "stok_prophet.RData")
write.xlsx(m_pred,'EXCEL/m_pred.xlsx',sheetName='Sheet1')
